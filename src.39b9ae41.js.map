{"version":3,"sources":["src/chart_data.js","src/chart-manager/builtins-upgrade.js","src/chart-manager/utils.js","src/chart-manager/components/charts/line-chart.js","src/chart-manager/components/charts/line-chart-with-marks.js","src/chart-manager/components/slider.js","src/chart-manager/components/checkbox.js","src/chart-manager/components/chart-manager.js","src/index.js"],"names":["Array","prototype","last","length","formatUnix","timestamp","Date","toString","split","slice","join","linearBezier","t","a","b","hexOpacity","hex","o","Math","floor","padStart","AS","clearAnimation","Symbol","animationTimeProgress","createAnimation","state","onChangeState","animationTime","initial","newState","animationStarted","field","start","window","requestAnimationFrame","_animate","progress","min","copy","obj","map","Object","newObj","keys","forEach","key","LineChart","config","l","canvas","document","createElement","width","height","ctx","getContext","lineJoin","lineWidth","minX","xAxis","maxX","minY","maxY","columns","animate","clear","draw","animationSpeed","drawLines","beginPath","strokeStyle","color","yAxis","values","i","x","scaleX","moveTo","y","scaleY","lineTo","stroke","closePath","clearRect","$container","appendChild","LineChartWithMarks","font","fontSize","absMinX","absMaxX","drawMarksX","drawMarksY","lmx","rmx","k","drawMark","lx","rx","mx","opacity","d","txt","w","measureText","fillStyle","fillText","absMinY","absMaxY","lmy","umy","startY","Slider","dragWidth","maxGap","left","right","subscribers","mouseDown","$sliderWrapper","classList","add","$slider","style","setProperty","$sliderWindow","$blurLeft","$blurRight","updateSlider","bind","event","clientX","getBoundingClientRect","draggingLeft","draggingRight","draggingAll","startDrag","change","max","publish","s","addEventListener","e","dragHandler","setListeners","func","push","Checkbox","label","checked","$checkboxWrapper","$checkbox","$label","textContent","toggleChecked","remove","offsetWidth","ChartManager","overviewHeight","chart","$chartManager","shownCharts","Set","$mainChartContainer","minMaxY","mainLineChart","$sliderContainer","slider","onChange","setRange","overviewLineChart","position","$checkboxContainer","checkboxes","checkbox","name","handleCheckbox","range","update","end","spreadX","newMainState","newOverviewState","has","val","delete","render","cb","$root","querySelector","chartData","chartManager","parseChart","parsed","column","types","c","colors","names","type"],"mappings":"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","file":"src.39b9ae41.js","sourceRoot":"..","sourcesContent":["export default [\r\n  {\r\n    \"columns\": [\r\n      [\r\n        \"x\",\r\n        1542412800000,\r\n        1542499200000,\r\n        1542585600000,\r\n        1542672000000,\r\n        1542758400000,\r\n        1542844800000,\r\n        1542931200000,\r\n        1543017600000,\r\n        1543104000000,\r\n        1543190400000,\r\n        1543276800000,\r\n        1543363200000,\r\n        1543449600000,\r\n        1543536000000,\r\n        1543622400000,\r\n        1543708800000,\r\n        1543795200000,\r\n        1543881600000,\r\n        1543968000000,\r\n        1544054400000,\r\n        1544140800000,\r\n        1544227200000,\r\n        1544313600000,\r\n        1544400000000,\r\n        1544486400000,\r\n        1544572800000,\r\n        1544659200000,\r\n        1544745600000,\r\n        1544832000000,\r\n        1544918400000,\r\n        1545004800000,\r\n        1545091200000,\r\n        1545177600000,\r\n        1545264000000,\r\n        1545350400000,\r\n        1545436800000,\r\n        1545523200000,\r\n        1545609600000,\r\n        1545696000000,\r\n        1545782400000,\r\n        1545868800000,\r\n        1545955200000,\r\n        1546041600000,\r\n        1546128000000,\r\n        1546214400000,\r\n        1546300800000,\r\n        1546387200000,\r\n        1546473600000,\r\n        1546560000000,\r\n        1546646400000,\r\n        1546732800000,\r\n        1546819200000,\r\n        1546905600000,\r\n        1546992000000,\r\n        1547078400000,\r\n        1547164800000,\r\n        1547251200000,\r\n        1547337600000,\r\n        1547424000000,\r\n        1547510400000,\r\n        1547596800000,\r\n        1547683200000,\r\n        1547769600000,\r\n        1547856000000,\r\n        1547942400000,\r\n        1548028800000,\r\n        1548115200000,\r\n        1548201600000,\r\n        1548288000000,\r\n        1548374400000,\r\n        1548460800000,\r\n        1548547200000,\r\n        1548633600000,\r\n        1548720000000,\r\n        1548806400000,\r\n        1548892800000,\r\n        1548979200000,\r\n        1549065600000,\r\n        1549152000000,\r\n        1549238400000,\r\n        1549324800000,\r\n        1549411200000,\r\n        1549497600000,\r\n        1549584000000,\r\n        1549670400000,\r\n        1549756800000,\r\n        1549843200000,\r\n        1549929600000,\r\n        1550016000000,\r\n        1550102400000,\r\n        1550188800000,\r\n        1550275200000,\r\n        1550361600000,\r\n        1550448000000,\r\n        1550534400000,\r\n        1550620800000,\r\n        1550707200000,\r\n        1550793600000,\r\n        1550880000000,\r\n        1550966400000,\r\n        1551052800000,\r\n        1551139200000,\r\n        1551225600000,\r\n        1551312000000,\r\n        1551398400000,\r\n        1551484800000,\r\n        1551571200000,\r\n        1551657600000,\r\n        1551744000000,\r\n        1551830400000,\r\n        1551916800000,\r\n        1552003200000\r\n      ],\r\n      [\r\n        \"y0\",\r\n        37,\r\n        20,\r\n        32,\r\n        39,\r\n        32,\r\n        35,\r\n        19,\r\n        65,\r\n        36,\r\n        62,\r\n        113,\r\n        69,\r\n        120,\r\n        60,\r\n        51,\r\n        49,\r\n        71,\r\n        122,\r\n        149,\r\n        69,\r\n        57,\r\n        21,\r\n        33,\r\n        55,\r\n        92,\r\n        62,\r\n        47,\r\n        50,\r\n        56,\r\n        116,\r\n        63,\r\n        60,\r\n        55,\r\n        65,\r\n        76,\r\n        33,\r\n        45,\r\n        64,\r\n        54,\r\n        81,\r\n        180,\r\n        123,\r\n        106,\r\n        37,\r\n        60,\r\n        70,\r\n        46,\r\n        68,\r\n        46,\r\n        51,\r\n        33,\r\n        57,\r\n        75,\r\n        70,\r\n        95,\r\n        70,\r\n        50,\r\n        68,\r\n        63,\r\n        66,\r\n        53,\r\n        38,\r\n        52,\r\n        109,\r\n        121,\r\n        53,\r\n        36,\r\n        71,\r\n        96,\r\n        55,\r\n        58,\r\n        29,\r\n        31,\r\n        55,\r\n        52,\r\n        44,\r\n        126,\r\n        191,\r\n        73,\r\n        87,\r\n        255,\r\n        278,\r\n        219,\r\n        170,\r\n        129,\r\n        125,\r\n        126,\r\n        84,\r\n        65,\r\n        53,\r\n        154,\r\n        57,\r\n        71,\r\n        64,\r\n        75,\r\n        72,\r\n        39,\r\n        47,\r\n        52,\r\n        73,\r\n        89,\r\n        156,\r\n        86,\r\n        105,\r\n        88,\r\n        45,\r\n        33,\r\n        56,\r\n        142,\r\n        124,\r\n        114,\r\n        64\r\n      ],\r\n      [\r\n        \"y1\",\r\n        22,\r\n        12,\r\n        30,\r\n        40,\r\n        33,\r\n        23,\r\n        18,\r\n        41,\r\n        45,\r\n        69,\r\n        57,\r\n        61,\r\n        70,\r\n        47,\r\n        31,\r\n        34,\r\n        40,\r\n        55,\r\n        27,\r\n        57,\r\n        48,\r\n        32,\r\n        40,\r\n        49,\r\n        54,\r\n        49,\r\n        34,\r\n        51,\r\n        51,\r\n        51,\r\n        66,\r\n        51,\r\n        94,\r\n        60,\r\n        64,\r\n        28,\r\n        44,\r\n        96,\r\n        49,\r\n        73,\r\n        30,\r\n        88,\r\n        63,\r\n        42,\r\n        56,\r\n        67,\r\n        52,\r\n        67,\r\n        35,\r\n        61,\r\n        40,\r\n        55,\r\n        63,\r\n        61,\r\n        105,\r\n        59,\r\n        51,\r\n        76,\r\n        63,\r\n        57,\r\n        47,\r\n        56,\r\n        51,\r\n        98,\r\n        103,\r\n        62,\r\n        54,\r\n        104,\r\n        48,\r\n        41,\r\n        41,\r\n        37,\r\n        30,\r\n        28,\r\n        26,\r\n        37,\r\n        65,\r\n        86,\r\n        70,\r\n        81,\r\n        54,\r\n        74,\r\n        70,\r\n        50,\r\n        74,\r\n        79,\r\n        85,\r\n        62,\r\n        36,\r\n        46,\r\n        68,\r\n        43,\r\n        66,\r\n        50,\r\n        28,\r\n        66,\r\n        39,\r\n        23,\r\n        63,\r\n        74,\r\n        83,\r\n        66,\r\n        40,\r\n        60,\r\n        29,\r\n        36,\r\n        27,\r\n        54,\r\n        89,\r\n        50,\r\n        73,\r\n        52\r\n      ]\r\n    ],\r\n    \"types\": { \"y0\": \"line\", \"y1\": \"line\", \"x\": \"x\" },\r\n    \"names\": { \"y0\": \"#0\", \"y1\": \"#1\" },\r\n    \"colors\": { \"y0\": \"#3DC23F\", \"y1\": \"#F34C44\" }\r\n  },\r\n  {\r\n    \"columns\": [\r\n      [\r\n        \"x\",\r\n        1542412800000,\r\n        1542499200000,\r\n        1542585600000,\r\n        1542672000000,\r\n        1542758400000,\r\n        1542844800000,\r\n        1542931200000,\r\n        1543017600000,\r\n        1543104000000,\r\n        1543190400000,\r\n        1543276800000,\r\n        1543363200000,\r\n        1543449600000,\r\n        1543536000000,\r\n        1543622400000,\r\n        1543708800000,\r\n        1543795200000,\r\n        1543881600000,\r\n        1543968000000,\r\n        1544054400000,\r\n        1544140800000,\r\n        1544227200000,\r\n        1544313600000,\r\n        1544400000000,\r\n        1544486400000,\r\n        1544572800000,\r\n        1544659200000,\r\n        1544745600000,\r\n        1544832000000,\r\n        1544918400000,\r\n        1545004800000,\r\n        1545091200000,\r\n        1545177600000,\r\n        1545264000000,\r\n        1545350400000,\r\n        1545436800000,\r\n        1545523200000,\r\n        1545609600000,\r\n        1545696000000,\r\n        1545782400000,\r\n        1545868800000,\r\n        1545955200000,\r\n        1546041600000,\r\n        1546128000000,\r\n        1546214400000,\r\n        1546300800000,\r\n        1546387200000,\r\n        1546473600000,\r\n        1546560000000,\r\n        1546646400000,\r\n        1546732800000,\r\n        1546819200000,\r\n        1546905600000,\r\n        1546992000000,\r\n        1547078400000,\r\n        1547164800000,\r\n        1547251200000,\r\n        1547337600000,\r\n        1547424000000,\r\n        1547510400000,\r\n        1547596800000,\r\n        1547683200000,\r\n        1547769600000,\r\n        1547856000000,\r\n        1547942400000,\r\n        1548028800000,\r\n        1548115200000,\r\n        1548201600000,\r\n        1548288000000,\r\n        1548374400000,\r\n        1548460800000,\r\n        1548547200000,\r\n        1548633600000,\r\n        1548720000000,\r\n        1548806400000,\r\n        1548892800000,\r\n        1548979200000,\r\n        1549065600000,\r\n        1549152000000,\r\n        1549238400000,\r\n        1549324800000,\r\n        1549411200000,\r\n        1549497600000,\r\n        1549584000000,\r\n        1549670400000,\r\n        1549756800000,\r\n        1549843200000,\r\n        1549929600000,\r\n        1550016000000,\r\n        1550102400000,\r\n        1550188800000,\r\n        1550275200000,\r\n        1550361600000,\r\n        1550448000000,\r\n        1550534400000,\r\n        1550620800000,\r\n        1550707200000,\r\n        1550793600000,\r\n        1550880000000,\r\n        1550966400000,\r\n        1551052800000,\r\n        1551139200000,\r\n        1551225600000,\r\n        1551312000000,\r\n        1551398400000,\r\n        1551484800000,\r\n        1551571200000,\r\n        1551657600000,\r\n        1551744000000,\r\n        1551830400000,\r\n        1551916800000,\r\n        1552003200000\r\n      ],\r\n      [\r\n        \"y0\",\r\n        6706,\r\n        7579,\r\n        7798,\r\n        8307,\r\n        7866,\r\n        7736,\r\n        7816,\r\n        7630,\r\n        7536,\r\n        7105,\r\n        7178,\r\n        7619,\r\n        7917,\r\n        7483,\r\n        5772,\r\n        5700,\r\n        5435,\r\n        4837,\r\n        4716,\r\n        4890,\r\n        4753,\r\n        4820,\r\n        4538,\r\n        12162,\r\n        39444,\r\n        25765,\r\n        18012,\r\n        14421,\r\n        13249,\r\n        11310,\r\n        10377,\r\n        9399,\r\n        8917,\r\n        8259,\r\n        7902,\r\n        9442,\r\n        47596,\r\n        36160,\r\n        23866,\r\n        18500,\r\n        15488,\r\n        13722,\r\n        12270,\r\n        13413,\r\n        10574,\r\n        7092,\r\n        7159,\r\n        7880,\r\n        8821,\r\n        8306,\r\n        7780,\r\n        7963,\r\n        7837,\r\n        7611,\r\n        7334,\r\n        7413,\r\n        7015,\r\n        6742,\r\n        6557,\r\n        6593,\r\n        6680,\r\n        6725,\r\n        6345,\r\n        5988,\r\n        6365,\r\n        9911,\r\n        28833,\r\n        19694,\r\n        14873,\r\n        11911,\r\n        10498,\r\n        9708,\r\n        8893,\r\n        8365,\r\n        7960,\r\n        7694,\r\n        45529,\r\n        42858,\r\n        31508,\r\n        23289,\r\n        19147,\r\n        15874,\r\n        14551,\r\n        13124,\r\n        11778,\r\n        10809,\r\n        10522,\r\n        9918,\r\n        9436,\r\n        8617,\r\n        8765,\r\n        8194,\r\n        8035,\r\n        7865,\r\n        7573,\r\n        7422,\r\n        7047,\r\n        7147,\r\n        6861,\r\n        6669,\r\n        6363,\r\n        12073,\r\n        32381,\r\n        21390,\r\n        15311,\r\n        12819,\r\n        11655,\r\n        10696,\r\n        9678,\r\n        9143,\r\n        8296,\r\n        7852\r\n      ],\r\n      [\r\n        \"y1\",\r\n        3522,\r\n        4088,\r\n        4146,\r\n        4477,\r\n        4202,\r\n        4157,\r\n        4177,\r\n        4203,\r\n        4223,\r\n        3948,\r\n        3946,\r\n        3898,\r\n        3979,\r\n        4052,\r\n        3279,\r\n        3229,\r\n        3302,\r\n        3040,\r\n        3054,\r\n        2982,\r\n        3077,\r\n        2965,\r\n        2973,\r\n        5148,\r\n        22485,\r\n        13077,\r\n        9055,\r\n        7446,\r\n        6824,\r\n        5995,\r\n        5787,\r\n        5367,\r\n        4997,\r\n        4689,\r\n        4630,\r\n        4785,\r\n        22365,\r\n        15244,\r\n        10626,\r\n        8666,\r\n        7681,\r\n        6929,\r\n        6219,\r\n        6367,\r\n        5402,\r\n        4932,\r\n        4844,\r\n        5146,\r\n        5265,\r\n        4887,\r\n        4714,\r\n        4722,\r\n        4718,\r\n        4693,\r\n        4746,\r\n        4819,\r\n        4455,\r\n        4419,\r\n        4323,\r\n        4407,\r\n        4277,\r\n        11589,\r\n        6100,\r\n        5076,\r\n        4769,\r\n        8929,\r\n        14002,\r\n        9756,\r\n        7520,\r\n        6343,\r\n        5633,\r\n        5415,\r\n        5052,\r\n        4850,\r\n        4624,\r\n        4480,\r\n        14102,\r\n        24005,\r\n        14263,\r\n        10845,\r\n        9028,\r\n        7755,\r\n        7197,\r\n        7001,\r\n        6737,\r\n        6254,\r\n        6150,\r\n        5922,\r\n        5603,\r\n        5048,\r\n        5423,\r\n        5003,\r\n        5035,\r\n        4747,\r\n        4814,\r\n        4661,\r\n        4462,\r\n        4516,\r\n        4221,\r\n        4111,\r\n        4053,\r\n        12515,\r\n        15781,\r\n        10499,\r\n        8175,\r\n        6831,\r\n        6287,\r\n        5990,\r\n        5590,\r\n        5148,\r\n        4760,\r\n        4809\r\n      ]\r\n    ],\r\n    \"types\": { \"y0\": \"line\", \"y1\": \"line\", \"x\": \"x\" },\r\n    \"names\": { \"y0\": \"#0\", \"y1\": \"#1\" },\r\n    \"colors\": { \"y0\": \"#4682b4\", \"y1\": \"#696966\" }\r\n  },\r\n  {\r\n    \"columns\": [\r\n      [\r\n        \"x\",\r\n        1542412800000,\r\n        1542499200000,\r\n        1542585600000,\r\n        1542672000000,\r\n        1542758400000,\r\n        1542844800000,\r\n        1542931200000,\r\n        1543017600000,\r\n        1543104000000,\r\n        1543190400000,\r\n        1543276800000,\r\n        1543363200000,\r\n        1543449600000,\r\n        1543536000000,\r\n        1543622400000,\r\n        1543708800000,\r\n        1543795200000,\r\n        1543881600000,\r\n        1543968000000,\r\n        1544054400000,\r\n        1544140800000,\r\n        1544227200000,\r\n        1544313600000,\r\n        1544400000000,\r\n        1544486400000,\r\n        1544572800000,\r\n        1544659200000,\r\n        1544745600000,\r\n        1544832000000,\r\n        1544918400000,\r\n        1545004800000,\r\n        1545091200000,\r\n        1545177600000,\r\n        1545264000000,\r\n        1545350400000,\r\n        1545436800000,\r\n        1545523200000,\r\n        1545609600000,\r\n        1545696000000,\r\n        1545782400000,\r\n        1545868800000,\r\n        1545955200000,\r\n        1546041600000,\r\n        1546128000000,\r\n        1546214400000,\r\n        1546300800000,\r\n        1546387200000,\r\n        1546473600000,\r\n        1546560000000,\r\n        1546646400000,\r\n        1546732800000,\r\n        1546819200000,\r\n        1546905600000,\r\n        1546992000000,\r\n        1547078400000,\r\n        1547164800000,\r\n        1547251200000,\r\n        1547337600000,\r\n        1547424000000,\r\n        1547510400000,\r\n        1547596800000,\r\n        1547683200000,\r\n        1547769600000,\r\n        1547856000000,\r\n        1547942400000,\r\n        1548028800000,\r\n        1548115200000,\r\n        1548201600000,\r\n        1548288000000,\r\n        1548374400000,\r\n        1548460800000,\r\n        1548547200000,\r\n        1548633600000,\r\n        1548720000000,\r\n        1548806400000,\r\n        1548892800000,\r\n        1548979200000,\r\n        1549065600000,\r\n        1549152000000,\r\n        1549238400000,\r\n        1549324800000,\r\n        1549411200000,\r\n        1549497600000,\r\n        1549584000000,\r\n        1549670400000,\r\n        1549756800000,\r\n        1549843200000,\r\n        1549929600000,\r\n        1550016000000,\r\n        1550102400000,\r\n        1550188800000,\r\n        1550275200000,\r\n        1550361600000,\r\n        1550448000000,\r\n        1550534400000,\r\n        1550620800000,\r\n        1550707200000,\r\n        1550793600000,\r\n        1550880000000,\r\n        1550966400000,\r\n        1551052800000,\r\n        1551139200000,\r\n        1551225600000,\r\n        1551312000000,\r\n        1551398400000,\r\n        1551484800000,\r\n        1551571200000,\r\n        1551657600000,\r\n        1551744000000,\r\n        1551830400000,\r\n        1551916800000,\r\n        1552003200000\r\n      ],\r\n      [\r\n        \"y0\",\r\n        4747,\r\n        4849,\r\n        5045,\r\n        5184,\r\n        5746,\r\n        5400,\r\n        5424,\r\n        5576,\r\n        6436,\r\n        5337,\r\n        4840,\r\n        5379,\r\n        4678,\r\n        4736,\r\n        5074,\r\n        4897,\r\n        4349,\r\n        5089,\r\n        4543,\r\n        5033,\r\n        5047,\r\n        4871,\r\n        4812,\r\n        4723,\r\n        4545,\r\n        4723,\r\n        4721,\r\n        4384,\r\n        4277,\r\n        4682,\r\n        4805,\r\n        4001,\r\n        4610,\r\n        5241,\r\n        5113,\r\n        4059,\r\n        4529,\r\n        4673,\r\n        5291,\r\n        5154,\r\n        5123,\r\n        5535,\r\n        5540,\r\n        5161,\r\n        5666,\r\n        5584,\r\n        6999,\r\n        6854,\r\n        5083,\r\n        5361,\r\n        5863,\r\n        5792,\r\n        5586,\r\n        6106,\r\n        5481,\r\n        5532,\r\n        5853,\r\n        5809,\r\n        6244,\r\n        6156,\r\n        5596,\r\n        5426,\r\n        5422,\r\n        5413,\r\n        4795,\r\n        5113,\r\n        5279,\r\n        5530,\r\n        4939,\r\n        4983,\r\n        4984,\r\n        5527,\r\n        5765,\r\n        5001,\r\n        5818,\r\n        6061,\r\n        5956,\r\n        5288,\r\n        5837,\r\n        5703,\r\n        5440,\r\n        5238,\r\n        5957,\r\n        6432,\r\n        6389,\r\n        6064,\r\n        7065,\r\n        5981,\r\n        5779,\r\n        6567,\r\n        6320,\r\n        5634,\r\n        6023,\r\n        5702,\r\n        6066,\r\n        5797,\r\n        6163,\r\n        6182,\r\n        4906,\r\n        5637,\r\n        7073,\r\n        6679,\r\n        5831,\r\n        6015,\r\n        6266,\r\n        6128,\r\n        6156,\r\n        6218,\r\n        6050,\r\n        6140,\r\n        5877,\r\n        7147\r\n      ],\r\n      [\r\n        \"y1\",\r\n        4605,\r\n        5036,\r\n        4956,\r\n        5168,\r\n        5008,\r\n        5069,\r\n        5223,\r\n        5360,\r\n        5695,\r\n        5209,\r\n        4796,\r\n        5028,\r\n        4931,\r\n        5123,\r\n        4987,\r\n        4964,\r\n        4982,\r\n        5037,\r\n        5050,\r\n        5144,\r\n        5049,\r\n        4971,\r\n        4911,\r\n        4792,\r\n        4562,\r\n        4597,\r\n        4759,\r\n        4761,\r\n        4646,\r\n        4543,\r\n        4597,\r\n        4428,\r\n        4213,\r\n        4270,\r\n        3961,\r\n        4784,\r\n        4699,\r\n        4711,\r\n        4855,\r\n        4717,\r\n        4563,\r\n        4923,\r\n        5041,\r\n        4895,\r\n        4877,\r\n        5001,\r\n        5410,\r\n        5033,\r\n        5045,\r\n        5184,\r\n        4976,\r\n        5207,\r\n        5354,\r\n        5205,\r\n        4887,\r\n        4831,\r\n        5083,\r\n        5148,\r\n        5369,\r\n        5176,\r\n        5022,\r\n        4880,\r\n        4969,\r\n        5135,\r\n        4836,\r\n        4764,\r\n        4782,\r\n        4783,\r\n        4646,\r\n        4755,\r\n        4744,\r\n        4932,\r\n        5059,\r\n        4851,\r\n        4614,\r\n        4718,\r\n        5018,\r\n        5034,\r\n        5223,\r\n        5007,\r\n        4839,\r\n        4763,\r\n        4761,\r\n        5048,\r\n        5330,\r\n        5106,\r\n        5956,\r\n        5135,\r\n        5006,\r\n        4919,\r\n        5511,\r\n        5114,\r\n        5122,\r\n        5314,\r\n        5089,\r\n        5022,\r\n        4918,\r\n        4986,\r\n        4626,\r\n        4675,\r\n        4951,\r\n        4921,\r\n        5173,\r\n        5145,\r\n        5209,\r\n        4967,\r\n        5030,\r\n        5120,\r\n        5030,\r\n        4946,\r\n        4795,\r\n        5224\r\n      ]\r\n    ],\r\n    \"types\": { \"y0\": \"line\", \"y1\": \"line\", \"x\": \"x\" },\r\n    \"names\": { \"y0\": \"#0\", \"y1\": \"#1\" },\r\n    \"colors\": { \"y0\": \"#d69c2f\", \"y1\": \"#00539c\" }\r\n  },\r\n  {\r\n    \"columns\": [\r\n      [\r\n        \"x\",\r\n        1542412800000,\r\n        1542499200000,\r\n        1542585600000,\r\n        1542672000000,\r\n        1542758400000,\r\n        1542844800000,\r\n        1542931200000,\r\n        1543017600000,\r\n        1543104000000,\r\n        1543190400000,\r\n        1543276800000,\r\n        1543363200000,\r\n        1543449600000,\r\n        1543536000000,\r\n        1543622400000,\r\n        1543708800000,\r\n        1543795200000,\r\n        1543881600000,\r\n        1543968000000,\r\n        1544054400000,\r\n        1544140800000,\r\n        1544227200000,\r\n        1544313600000,\r\n        1544400000000,\r\n        1544486400000,\r\n        1544572800000,\r\n        1544659200000,\r\n        1544745600000,\r\n        1544832000000,\r\n        1544918400000,\r\n        1545004800000,\r\n        1545091200000,\r\n        1545177600000,\r\n        1545264000000,\r\n        1545350400000,\r\n        1545436800000,\r\n        1545523200000,\r\n        1545609600000,\r\n        1545696000000,\r\n        1545782400000,\r\n        1545868800000,\r\n        1545955200000,\r\n        1546041600000,\r\n        1546128000000,\r\n        1546214400000,\r\n        1546300800000,\r\n        1546387200000,\r\n        1546473600000,\r\n        1546560000000,\r\n        1546646400000,\r\n        1546732800000,\r\n        1546819200000,\r\n        1546905600000,\r\n        1546992000000,\r\n        1547078400000,\r\n        1547164800000,\r\n        1547251200000,\r\n        1547337600000,\r\n        1547424000000,\r\n        1547510400000,\r\n        1547596800000,\r\n        1547683200000,\r\n        1547769600000,\r\n        1547856000000,\r\n        1547942400000,\r\n        1548028800000,\r\n        1548115200000,\r\n        1548201600000,\r\n        1548288000000,\r\n        1548374400000,\r\n        1548460800000,\r\n        1548547200000,\r\n        1548633600000,\r\n        1548720000000,\r\n        1548806400000,\r\n        1548892800000,\r\n        1548979200000,\r\n        1549065600000,\r\n        1549152000000,\r\n        1549238400000,\r\n        1549324800000,\r\n        1549411200000,\r\n        1549497600000,\r\n        1549584000000,\r\n        1549670400000,\r\n        1549756800000,\r\n        1549843200000,\r\n        1549929600000,\r\n        1550016000000,\r\n        1550102400000,\r\n        1550188800000,\r\n        1550275200000,\r\n        1550361600000,\r\n        1550448000000,\r\n        1550534400000,\r\n        1550620800000,\r\n        1550707200000,\r\n        1550793600000,\r\n        1550880000000,\r\n        1550966400000,\r\n        1551052800000,\r\n        1551139200000,\r\n        1551225600000,\r\n        1551312000000,\r\n        1551398400000,\r\n        1551484800000,\r\n        1551571200000,\r\n        1551657600000,\r\n        1551744000000,\r\n        1551830400000,\r\n        1551916800000,\r\n        1552003200000\r\n      ],\r\n      [\r\n        \"y0\",\r\n        41,\r\n        31,\r\n        62,\r\n        65,\r\n        66,\r\n        79,\r\n        52,\r\n        26,\r\n        42,\r\n        68,\r\n        71,\r\n        86,\r\n        65,\r\n        54,\r\n        33,\r\n        70,\r\n        52,\r\n        68,\r\n        75,\r\n        92,\r\n        69,\r\n        28,\r\n        33,\r\n        84,\r\n        65,\r\n        56,\r\n        42,\r\n        44,\r\n        26,\r\n        34,\r\n        45,\r\n        49,\r\n        83,\r\n        83,\r\n        66,\r\n        31,\r\n        43,\r\n        55,\r\n        57,\r\n        55,\r\n        54,\r\n        45,\r\n        51,\r\n        64,\r\n        27,\r\n        19,\r\n        38,\r\n        38,\r\n        44,\r\n        49,\r\n        42,\r\n        50,\r\n        60,\r\n        73,\r\n        86,\r\n        65,\r\n        51,\r\n        54,\r\n        48,\r\n        61,\r\n        82,\r\n        83,\r\n        53,\r\n        52,\r\n        48,\r\n        64,\r\n        96,\r\n        103,\r\n        68,\r\n        73,\r\n        58,\r\n        42,\r\n        81,\r\n        80,\r\n        76,\r\n        106,\r\n        93,\r\n        65,\r\n        69,\r\n        104,\r\n        75,\r\n        79,\r\n        92,\r\n        73,\r\n        49,\r\n        63,\r\n        76,\r\n        79,\r\n        83,\r\n        70,\r\n        55,\r\n        47,\r\n        42,\r\n        111,\r\n        93,\r\n        74,\r\n        99,\r\n        107,\r\n        52,\r\n        65,\r\n        80,\r\n        82,\r\n        74,\r\n        154,\r\n        106,\r\n        39,\r\n        40,\r\n        77,\r\n        85,\r\n        66,\r\n        52,\r\n        25\r\n      ],\r\n      [\r\n        \"y1\",\r\n        19,\r\n        10,\r\n        36,\r\n        41,\r\n        28,\r\n        39,\r\n        24,\r\n        16,\r\n        14,\r\n        40,\r\n        39,\r\n        37,\r\n        47,\r\n        28,\r\n        16,\r\n        32,\r\n        25,\r\n        29,\r\n        36,\r\n        45,\r\n        38,\r\n        11,\r\n        25,\r\n        37,\r\n        35,\r\n        22,\r\n        25,\r\n        30,\r\n        16,\r\n        20,\r\n        32,\r\n        34,\r\n        37,\r\n        26,\r\n        31,\r\n        10,\r\n        19,\r\n        32,\r\n        34,\r\n        23,\r\n        25,\r\n        22,\r\n        21,\r\n        18,\r\n        11,\r\n        18,\r\n        18,\r\n        23,\r\n        11,\r\n        18,\r\n        22,\r\n        19,\r\n        27,\r\n        27,\r\n        30,\r\n        25,\r\n        27,\r\n        23,\r\n        28,\r\n        30,\r\n        23,\r\n        31,\r\n        27,\r\n        16,\r\n        30,\r\n        21,\r\n        36,\r\n        33,\r\n        25,\r\n        34,\r\n        16,\r\n        24,\r\n        37,\r\n        33,\r\n        26,\r\n        24,\r\n        31,\r\n        21,\r\n        37,\r\n        32,\r\n        35,\r\n        31,\r\n        30,\r\n        27,\r\n        15,\r\n        17,\r\n        38,\r\n        40,\r\n        32,\r\n        34,\r\n        30,\r\n        17,\r\n        21,\r\n        28,\r\n        36,\r\n        30,\r\n        24,\r\n        25,\r\n        20,\r\n        24,\r\n        22,\r\n        42,\r\n        34,\r\n        47,\r\n        40,\r\n        29,\r\n        29,\r\n        31,\r\n        39,\r\n        30,\r\n        29,\r\n        18\r\n      ]\r\n    ],\r\n    \"types\": { \"y0\": \"line\", \"y1\": \"line\", \"x\": \"x\" },\r\n    \"names\": { \"y0\": \"#0\", \"y1\": \"#1\" },\r\n    \"colors\": { \"y0\": \"#55B4B0\", \"y1\": \"#577284\" }\r\n  },\r\n  {\r\n    \"columns\": [\r\n      [\r\n        \"x\",\r\n        1520035200000,\r\n        1520121600000,\r\n        1520208000000,\r\n        1520294400000,\r\n        1520380800000,\r\n        1520467200000,\r\n        1520553600000,\r\n        1520640000000,\r\n        1520726400000,\r\n        1520812800000,\r\n        1520899200000,\r\n        1520985600000,\r\n        1521072000000,\r\n        1521158400000,\r\n        1521244800000,\r\n        1521331200000,\r\n        1521417600000,\r\n        1521504000000,\r\n        1521590400000,\r\n        1521676800000,\r\n        1521763200000,\r\n        1521849600000,\r\n        1521936000000,\r\n        1522022400000,\r\n        1522108800000,\r\n        1522195200000,\r\n        1522281600000,\r\n        1522368000000,\r\n        1522454400000,\r\n        1522540800000,\r\n        1522627200000,\r\n        1522713600000,\r\n        1522800000000,\r\n        1522886400000,\r\n        1522972800000,\r\n        1523059200000,\r\n        1523145600000,\r\n        1523232000000,\r\n        1523318400000,\r\n        1523404800000,\r\n        1523491200000,\r\n        1523577600000,\r\n        1523664000000,\r\n        1523750400000,\r\n        1523836800000,\r\n        1523923200000,\r\n        1524009600000,\r\n        1524096000000,\r\n        1524182400000,\r\n        1524268800000,\r\n        1524355200000,\r\n        1524441600000,\r\n        1524528000000,\r\n        1524614400000,\r\n        1524700800000,\r\n        1524787200000,\r\n        1524873600000,\r\n        1524960000000,\r\n        1525046400000,\r\n        1525132800000,\r\n        1525219200000,\r\n        1525305600000,\r\n        1525392000000,\r\n        1525478400000,\r\n        1525564800000,\r\n        1525651200000,\r\n        1525737600000,\r\n        1525824000000,\r\n        1525910400000,\r\n        1525996800000,\r\n        1526083200000,\r\n        1526169600000,\r\n        1526256000000,\r\n        1526342400000,\r\n        1526428800000,\r\n        1526515200000,\r\n        1526601600000,\r\n        1526688000000,\r\n        1526774400000,\r\n        1526860800000,\r\n        1526947200000,\r\n        1527033600000,\r\n        1527120000000,\r\n        1527206400000,\r\n        1527292800000,\r\n        1527379200000,\r\n        1527465600000,\r\n        1527552000000,\r\n        1527638400000,\r\n        1527724800000,\r\n        1527811200000,\r\n        1527897600000,\r\n        1527984000000,\r\n        1528070400000,\r\n        1528156800000,\r\n        1528243200000,\r\n        1528329600000,\r\n        1528416000000,\r\n        1528502400000,\r\n        1528588800000,\r\n        1528675200000,\r\n        1528761600000,\r\n        1528848000000,\r\n        1528934400000,\r\n        1529020800000,\r\n        1529107200000,\r\n        1529193600000,\r\n        1529280000000,\r\n        1529366400000,\r\n        1529452800000,\r\n        1529539200000,\r\n        1529625600000,\r\n        1529712000000,\r\n        1529798400000,\r\n        1529884800000,\r\n        1529971200000,\r\n        1530057600000,\r\n        1530144000000,\r\n        1530230400000,\r\n        1530316800000,\r\n        1530403200000,\r\n        1530489600000,\r\n        1530576000000,\r\n        1530662400000,\r\n        1530748800000,\r\n        1530835200000,\r\n        1530921600000,\r\n        1531008000000,\r\n        1531094400000,\r\n        1531180800000,\r\n        1531267200000,\r\n        1531353600000,\r\n        1531440000000,\r\n        1531526400000,\r\n        1531612800000,\r\n        1531699200000,\r\n        1531785600000,\r\n        1531872000000,\r\n        1531958400000,\r\n        1532044800000,\r\n        1532131200000,\r\n        1532217600000,\r\n        1532304000000,\r\n        1532390400000,\r\n        1532476800000,\r\n        1532563200000,\r\n        1532649600000,\r\n        1532736000000,\r\n        1532822400000,\r\n        1532908800000,\r\n        1532995200000,\r\n        1533081600000,\r\n        1533168000000,\r\n        1533254400000,\r\n        1533340800000,\r\n        1533427200000,\r\n        1533513600000,\r\n        1533600000000,\r\n        1533686400000,\r\n        1533772800000,\r\n        1533859200000,\r\n        1533945600000,\r\n        1534032000000,\r\n        1534118400000,\r\n        1534204800000,\r\n        1534291200000,\r\n        1534377600000,\r\n        1534464000000,\r\n        1534550400000,\r\n        1534636800000,\r\n        1534723200000,\r\n        1534809600000,\r\n        1534896000000,\r\n        1534982400000,\r\n        1535068800000,\r\n        1535155200000,\r\n        1535241600000,\r\n        1535328000000,\r\n        1535414400000,\r\n        1535500800000,\r\n        1535587200000,\r\n        1535673600000,\r\n        1535760000000,\r\n        1535846400000,\r\n        1535932800000,\r\n        1536019200000,\r\n        1536105600000,\r\n        1536192000000,\r\n        1536278400000,\r\n        1536364800000,\r\n        1536451200000,\r\n        1536537600000,\r\n        1536624000000,\r\n        1536710400000,\r\n        1536796800000,\r\n        1536883200000,\r\n        1536969600000,\r\n        1537056000000,\r\n        1537142400000,\r\n        1537228800000,\r\n        1537315200000,\r\n        1537401600000,\r\n        1537488000000,\r\n        1537574400000,\r\n        1537660800000,\r\n        1537747200000,\r\n        1537833600000,\r\n        1537920000000,\r\n        1538006400000,\r\n        1538092800000,\r\n        1538179200000,\r\n        1538265600000,\r\n        1538352000000,\r\n        1538438400000,\r\n        1538524800000,\r\n        1538611200000,\r\n        1538697600000,\r\n        1538784000000,\r\n        1538870400000,\r\n        1538956800000,\r\n        1539043200000,\r\n        1539129600000,\r\n        1539216000000,\r\n        1539302400000,\r\n        1539388800000,\r\n        1539475200000,\r\n        1539561600000,\r\n        1539648000000,\r\n        1539734400000,\r\n        1539820800000,\r\n        1539907200000,\r\n        1539993600000,\r\n        1540080000000,\r\n        1540166400000,\r\n        1540252800000,\r\n        1540339200000,\r\n        1540425600000,\r\n        1540512000000,\r\n        1540598400000,\r\n        1540684800000,\r\n        1540771200000,\r\n        1540857600000,\r\n        1540944000000,\r\n        1541030400000,\r\n        1541116800000,\r\n        1541203200000,\r\n        1541289600000,\r\n        1541376000000,\r\n        1541462400000,\r\n        1541548800000,\r\n        1541635200000,\r\n        1541721600000,\r\n        1541808000000,\r\n        1541894400000,\r\n        1541980800000,\r\n        1542067200000,\r\n        1542153600000,\r\n        1542240000000,\r\n        1542326400000,\r\n        1542412800000,\r\n        1542499200000,\r\n        1542585600000,\r\n        1542672000000,\r\n        1542758400000,\r\n        1542844800000,\r\n        1542931200000,\r\n        1543017600000,\r\n        1543104000000,\r\n        1543190400000,\r\n        1543276800000,\r\n        1543363200000,\r\n        1543449600000,\r\n        1543536000000,\r\n        1543622400000,\r\n        1543708800000,\r\n        1543795200000,\r\n        1543881600000,\r\n        1543968000000,\r\n        1544054400000,\r\n        1544140800000,\r\n        1544227200000,\r\n        1544313600000,\r\n        1544400000000,\r\n        1544486400000,\r\n        1544572800000,\r\n        1544659200000,\r\n        1544745600000,\r\n        1544832000000,\r\n        1544918400000,\r\n        1545004800000,\r\n        1545091200000,\r\n        1545177600000,\r\n        1545264000000,\r\n        1545350400000,\r\n        1545436800000,\r\n        1545523200000,\r\n        1545609600000,\r\n        1545696000000,\r\n        1545782400000,\r\n        1545868800000,\r\n        1545955200000,\r\n        1546041600000,\r\n        1546128000000,\r\n        1546214400000,\r\n        1546300800000,\r\n        1546387200000,\r\n        1546473600000,\r\n        1546560000000,\r\n        1546646400000,\r\n        1546732800000,\r\n        1546819200000,\r\n        1546905600000,\r\n        1546992000000,\r\n        1547078400000,\r\n        1547164800000,\r\n        1547251200000,\r\n        1547337600000,\r\n        1547424000000,\r\n        1547510400000,\r\n        1547596800000,\r\n        1547683200000,\r\n        1547769600000,\r\n        1547856000000,\r\n        1547942400000,\r\n        1548028800000,\r\n        1548115200000,\r\n        1548201600000,\r\n        1548288000000,\r\n        1548374400000,\r\n        1548460800000,\r\n        1548547200000,\r\n        1548633600000,\r\n        1548720000000,\r\n        1548806400000,\r\n        1548892800000,\r\n        1548979200000,\r\n        1549065600000,\r\n        1549152000000,\r\n        1549238400000,\r\n        1549324800000,\r\n        1549411200000,\r\n        1549497600000,\r\n        1549584000000,\r\n        1549670400000,\r\n        1549756800000,\r\n        1549843200000,\r\n        1549929600000,\r\n        1550016000000,\r\n        1550102400000,\r\n        1550188800000,\r\n        1550275200000,\r\n        1550361600000,\r\n        1550448000000,\r\n        1550534400000,\r\n        1550620800000,\r\n        1550707200000,\r\n        1550793600000,\r\n        1550880000000,\r\n        1550966400000,\r\n        1551052800000,\r\n        1551139200000,\r\n        1551225600000,\r\n        1551312000000,\r\n        1551398400000,\r\n        1551484800000,\r\n        1551571200000,\r\n        1551657600000,\r\n        1551744000000,\r\n        1551830400000,\r\n        1551916800000,\r\n        1552003200000,\r\n        1552089600000\r\n      ],\r\n      [\r\n        \"y0\",\r\n        2298660,\r\n        2253410,\r\n        2515820,\r\n        2506600,\r\n        2460240,\r\n        2408400,\r\n        2317430,\r\n        2240100,\r\n        2295900,\r\n        2609800,\r\n        2594200,\r\n        2626400,\r\n        2615000,\r\n        2617800,\r\n        2394500,\r\n        2391100,\r\n        2608300,\r\n        2676000,\r\n        2637700,\r\n        2766600,\r\n        3186500,\r\n        3067700,\r\n        2570700,\r\n        2935000,\r\n        2949200,\r\n        2913500,\r\n        2763600,\r\n        3216300,\r\n        2343500,\r\n        2361000,\r\n        2580000,\r\n        2591800,\r\n        2595200,\r\n        2569500,\r\n        2587700,\r\n        2372500,\r\n        2351200,\r\n        2465600,\r\n        2625100,\r\n        2651300,\r\n        2686700,\r\n        2783300,\r\n        2417400,\r\n        2383800,\r\n        2736300,\r\n        2751100,\r\n        2678900,\r\n        2622300,\r\n        2586000,\r\n        2365700,\r\n        2407700,\r\n        2541300,\r\n        2600400,\r\n        2581500,\r\n        2576200,\r\n        2550100,\r\n        2334500,\r\n        2139400,\r\n        2015400,\r\n        2019900,\r\n        2210100,\r\n        2191800,\r\n        2240700,\r\n        2107400,\r\n        2026900,\r\n        2258000,\r\n        2255200,\r\n        2123200,\r\n        2267800,\r\n        2236100,\r\n        2065700,\r\n        2093300,\r\n        2315300,\r\n        2333200,\r\n        2349800,\r\n        2318300,\r\n        2275000,\r\n        2110300,\r\n        2077100,\r\n        2335200,\r\n        2357400,\r\n        2350000,\r\n        2293800,\r\n        2303600,\r\n        2118700,\r\n        2100300,\r\n        2219700,\r\n        2361100,\r\n        2349500,\r\n        2347800,\r\n        2318400,\r\n        2141600,\r\n        2178600,\r\n        2432500,\r\n        2448700,\r\n        2440300,\r\n        2450100,\r\n        2424100,\r\n        2229900,\r\n        2152400,\r\n        2402600,\r\n        2401000,\r\n        2418100,\r\n        2408600,\r\n        2408400,\r\n        2212600,\r\n        2189000,\r\n        2450800,\r\n        2444500,\r\n        2451900,\r\n        2451000,\r\n        2442600,\r\n        2287900,\r\n        2221100,\r\n        2451900,\r\n        2460200,\r\n        2460900,\r\n        2319900,\r\n        2270300,\r\n        2183800,\r\n        2195300,\r\n        2485000,\r\n        2460900,\r\n        2500600,\r\n        2495300,\r\n        2479100,\r\n        2290600,\r\n        2235800,\r\n        2459900,\r\n        2484500,\r\n        2491000,\r\n        2525600,\r\n        2477300,\r\n        2223700,\r\n        2146700,\r\n        2528200,\r\n        2567800,\r\n        2556300,\r\n        2540700,\r\n        2503000,\r\n        2301200,\r\n        2251600,\r\n        2538600,\r\n        2596500,\r\n        2553900,\r\n        2534200,\r\n        2527300,\r\n        2337400,\r\n        2332900,\r\n        2688500,\r\n        2585700,\r\n        2559600,\r\n        2651600,\r\n        2586800,\r\n        2445700,\r\n        2472300,\r\n        2633000,\r\n        2664600,\r\n        2649400,\r\n        2648900,\r\n        2644600,\r\n        2406400,\r\n        2426200,\r\n        2694000,\r\n        2740600,\r\n        2711800,\r\n        2700900,\r\n        2645800,\r\n        2422800,\r\n        2438500,\r\n        2697500,\r\n        2712500,\r\n        2690300,\r\n        2684400,\r\n        2517300,\r\n        2435300,\r\n        2444300,\r\n        2781800,\r\n        2807800,\r\n        2804500,\r\n        2771300,\r\n        2798800,\r\n        2633300,\r\n        2597100,\r\n        2946300,\r\n        2889800,\r\n        2949600,\r\n        2951400,\r\n        2928800,\r\n        2701400,\r\n        2709900,\r\n        3012900,\r\n        3019100,\r\n        2977200,\r\n        3012400,\r\n        2989800,\r\n        2752100,\r\n        2749100,\r\n        3033300,\r\n        3050400,\r\n        3023800,\r\n        3066400,\r\n        3047800,\r\n        2792200,\r\n        2799300,\r\n        3096100,\r\n        3132500,\r\n        3082400,\r\n        3071200,\r\n        3021400,\r\n        2818300,\r\n        2737500,\r\n        3037800,\r\n        3123700,\r\n        3138900,\r\n        3181800,\r\n        3118500,\r\n        2834500,\r\n        2826900,\r\n        3171000,\r\n        3175900,\r\n        3184300,\r\n        3195800,\r\n        3129100,\r\n        2834100,\r\n        2876800,\r\n        3019000,\r\n        3214000,\r\n        3227900,\r\n        3189600,\r\n        3187800,\r\n        2886800,\r\n        2880500,\r\n        3218200,\r\n        3253700,\r\n        3260400,\r\n        3243300,\r\n        3204000,\r\n        2962700,\r\n        2968600,\r\n        3282100,\r\n        3618900,\r\n        3017000,\r\n        3037300,\r\n        3044500,\r\n        2758900,\r\n        2784600,\r\n        3032900,\r\n        3132400,\r\n        3075800,\r\n        3108200,\r\n        3076200,\r\n        2851800,\r\n        2837800,\r\n        3107500,\r\n        3146800,\r\n        3145100,\r\n        3145300,\r\n        3158400,\r\n        2872100,\r\n        2823800,\r\n        3190400,\r\n        3209300,\r\n        3170800,\r\n        3195300,\r\n        3183000,\r\n        2910300,\r\n        2937400,\r\n        3297100,\r\n        3293600,\r\n        3278400,\r\n        3234200,\r\n        3224000,\r\n        3013900,\r\n        2955300,\r\n        3303900,\r\n        3323300,\r\n        3352600,\r\n        3348400,\r\n        3340600,\r\n        3110600,\r\n        3066400,\r\n        3409200,\r\n        3462100,\r\n        3394200,\r\n        3383100,\r\n        3433700,\r\n        3184000,\r\n        3092700,\r\n        3417400,\r\n        4505200,\r\n        3094500,\r\n        3106100,\r\n        3083200,\r\n        3005600,\r\n        2866700,\r\n        2984100,\r\n        2954200,\r\n        3086800,\r\n        3070500,\r\n        3040900,\r\n        2903500,\r\n        3592500,\r\n        3316200,\r\n        2930500,\r\n        2961900,\r\n        3009600,\r\n        3027200,\r\n        2871600,\r\n        2831600,\r\n        2881700,\r\n        3054200,\r\n        3116600,\r\n        3120800,\r\n        3157300,\r\n        2950700,\r\n        2982700,\r\n        3192800,\r\n        3223300,\r\n        3219500,\r\n        3235900,\r\n        3214100,\r\n        3004400,\r\n        2963500,\r\n        3280400,\r\n        3262400,\r\n        3256000,\r\n        3258400,\r\n        3264900,\r\n        3107500,\r\n        3057400,\r\n        3326600,\r\n        3332400,\r\n        3357000,\r\n        3365100,\r\n        3359500,\r\n        3127400,\r\n        3130200,\r\n        3367100,\r\n        3422700,\r\n        3436400,\r\n        3431100,\r\n        3600000,\r\n        3146100,\r\n        3170900,\r\n        3467300,\r\n        3483400,\r\n        3473600,\r\n        3454700,\r\n        3390200,\r\n        3213600,\r\n        3188800,\r\n        3498200,\r\n        3498600,\r\n        3493500,\r\n        3478900,\r\n        3446400,\r\n        3239200,\r\n        3229100,\r\n        3559600,\r\n        3563600,\r\n        3549800,\r\n        3577300,\r\n        3524400,\r\n        3282500,\r\n        3271300,\r\n        3599200,\r\n        3575200,\r\n        3554400,\r\n        3540300,\r\n        3450600,\r\n        2812000\r\n      ],\r\n      [\r\n        \"y1\",\r\n        1130400,\r\n        1065370,\r\n        1211030,\r\n        1215590,\r\n        1206540,\r\n        1206720,\r\n        1085450,\r\n        1047320,\r\n        1071720,\r\n        1253170,\r\n        1261050,\r\n        1264660,\r\n        1260240,\r\n        1264840,\r\n        1130440,\r\n        1121660,\r\n        1294120,\r\n        1290780,\r\n        1284540,\r\n        1302860,\r\n        1296810,\r\n        1165450,\r\n        1128830,\r\n        1302070,\r\n        1304470,\r\n        1307090,\r\n        1268000,\r\n        1302160,\r\n        1159330,\r\n        1163530,\r\n        1327140,\r\n        1320680,\r\n        1319200,\r\n        1306810,\r\n        1287990,\r\n        1121240,\r\n        1145070,\r\n        1132400,\r\n        1310310,\r\n        1329340,\r\n        1340060,\r\n        1333530,\r\n        1167040,\r\n        1153260,\r\n        1356930,\r\n        1366500,\r\n        1375970,\r\n        1378570,\r\n        1357460,\r\n        1192240,\r\n        1188650,\r\n        1386450,\r\n        1400570,\r\n        1395730,\r\n        1404160,\r\n        1378120,\r\n        1195410,\r\n        1082000,\r\n        1189660,\r\n        1197540,\r\n        1367850,\r\n        1389070,\r\n        1386300,\r\n        1282240,\r\n        1209450,\r\n        1409070,\r\n        1409450,\r\n        1271120,\r\n        1424860,\r\n        1399990,\r\n        1240640,\r\n        1248530,\r\n        1451770,\r\n        1460240,\r\n        1466100,\r\n        1460990,\r\n        1446730,\r\n        1268830,\r\n        1263270,\r\n        1473530,\r\n        1476230,\r\n        1480760,\r\n        1460520,\r\n        1454730,\r\n        1263910,\r\n        1227240,\r\n        1303900,\r\n        1474760,\r\n        1473400,\r\n        1477380,\r\n        1466790,\r\n        1285620,\r\n        1280100,\r\n        1491820,\r\n        1499660,\r\n        1496260,\r\n        1485990,\r\n        1473140,\r\n        1301290,\r\n        1273440,\r\n        1487420,\r\n        1494560,\r\n        1500790,\r\n        1508660,\r\n        1489400,\r\n        1301960,\r\n        1297680,\r\n        1501170,\r\n        1503000,\r\n        1488980,\r\n        1501170,\r\n        1479060,\r\n        1367980,\r\n        1296050,\r\n        1493920,\r\n        1487830,\r\n        1479120,\r\n        1338410,\r\n        1318550,\r\n        1266620,\r\n        1285640,\r\n        1487970,\r\n        1489080,\r\n        1489580,\r\n        1475400,\r\n        1471140,\r\n        1316010,\r\n        1271940,\r\n        1476160,\r\n        1480670,\r\n        1491030,\r\n        1480940,\r\n        1477640,\r\n        1305750,\r\n        1296770,\r\n        1483400,\r\n        1494440,\r\n        1495740,\r\n        1485900,\r\n        1484400,\r\n        1319160,\r\n        1284010,\r\n        1488140,\r\n        1502910,\r\n        1503450,\r\n        1485410,\r\n        1498200,\r\n        1323200,\r\n        1303150,\r\n        1506840,\r\n        1523440,\r\n        1521490,\r\n        1516770,\r\n        1504300,\r\n        1327520,\r\n        1307630,\r\n        1518100,\r\n        1521370,\r\n        1521280,\r\n        1521660,\r\n        1517700,\r\n        1349880,\r\n        1333010,\r\n        1543800,\r\n        1553730,\r\n        1546490,\r\n        1541710,\r\n        1532690,\r\n        1367020,\r\n        1354040,\r\n        1560080,\r\n        1564990,\r\n        1565050,\r\n        1561110,\r\n        1406570,\r\n        1340850,\r\n        1368550,\r\n        1600180,\r\n        1630760,\r\n        1621360,\r\n        1636580,\r\n        1652580,\r\n        1489550,\r\n        1465750,\r\n        1731080,\r\n        1730190,\r\n        1732260,\r\n        1730210,\r\n        1724800,\r\n        1519480,\r\n        1520490,\r\n        1758280,\r\n        1774530,\r\n        1770690,\r\n        1781100,\r\n        1762270,\r\n        1551690,\r\n        1541620,\r\n        1787290,\r\n        1795490,\r\n        1802940,\r\n        1799130,\r\n        1778850,\r\n        1560040,\r\n        1564580,\r\n        1822410,\r\n        1819680,\r\n        1812390,\r\n        1814100,\r\n        1798060,\r\n        1587880,\r\n        1589320,\r\n        1833920,\r\n        1843420,\r\n        1851460,\r\n        1845550,\r\n        1822980,\r\n        1596860,\r\n        1595900,\r\n        1866000,\r\n        1860480,\r\n        1862600,\r\n        1863950,\r\n        1827540,\r\n        1585280,\r\n        1588970,\r\n        1683930,\r\n        1879500,\r\n        1883300,\r\n        1879040,\r\n        1846160,\r\n        1639090,\r\n        1632580,\r\n        1895780,\r\n        1897620,\r\n        1906000,\r\n        1906730,\r\n        1895290,\r\n        1670120,\r\n        1670190,\r\n        1914360,\r\n        1932890,\r\n        1933160,\r\n        1921800,\r\n        1898720,\r\n        1673530,\r\n        1685190,\r\n        1937730,\r\n        1951850,\r\n        1949900,\r\n        1949020,\r\n        1923160,\r\n        1718450,\r\n        1704040,\r\n        1964800,\r\n        1975140,\r\n        2002510,\r\n        1985340,\r\n        1959000,\r\n        1736810,\r\n        1727670,\r\n        2006070,\r\n        2013910,\r\n        2012460,\r\n        1999630,\r\n        1977020,\r\n        1754720,\r\n        1778560,\r\n        2060360,\r\n        2057730,\r\n        2055990,\r\n        2036720,\r\n        2027870,\r\n        1824680,\r\n        1794140,\r\n        2067460,\r\n        2078290,\r\n        2094100,\r\n        2080950,\r\n        2062080,\r\n        1836850,\r\n        1828130,\r\n        2102920,\r\n        2112450,\r\n        2098790,\r\n        2116900,\r\n        2080290,\r\n        1863760,\r\n        1841050,\r\n        2105790,\r\n        2106420,\r\n        2151300,\r\n        2098890,\r\n        2085380,\r\n        1955580,\r\n        1819790,\r\n        1916140,\r\n        1913670,\r\n        2080350,\r\n        2058160,\r\n        2034960,\r\n        1911480,\r\n        1823940,\r\n        2087990,\r\n        1774260,\r\n        1833950,\r\n        1906680,\r\n        1902490,\r\n        1760460,\r\n        1748060,\r\n        1775740,\r\n        1974730,\r\n        2013790,\r\n        2026250,\r\n        2022210,\r\n        1835820,\r\n        1835930,\r\n        2096230,\r\n        2098020,\r\n        2095770,\r\n        2114060,\r\n        2099370,\r\n        1902800,\r\n        1854380,\r\n        2132520,\r\n        2143600,\r\n        2146120,\r\n        2143820,\r\n        2157910,\r\n        1929390,\r\n        1905550,\r\n        2183760,\r\n        2185970,\r\n        2198030,\r\n        2198160,\r\n        2182120,\r\n        1950150,\r\n        1931800,\r\n        2215380,\r\n        2216240,\r\n        2226480,\r\n        2220480,\r\n        2208790,\r\n        1972190,\r\n        1957520,\r\n        2253470,\r\n        2247170,\r\n        2245720,\r\n        2285890,\r\n        2220730,\r\n        1986340,\r\n        1967720,\r\n        2264340,\r\n        2270140,\r\n        2267210,\r\n        2268950,\r\n        2246450,\r\n        2048760,\r\n        1994100,\r\n        2288680,\r\n        2296010,\r\n        2313730,\r\n        2311290,\r\n        2293790,\r\n        2034250,\r\n        2025380,\r\n        2326190,\r\n        2323990,\r\n        2320790,\r\n        2271600,\r\n        2244270,\r\n        1663290\r\n      ],\r\n      [\r\n        \"y2\",\r\n        820900,\r\n        766050,\r\n        894390,\r\n        894540,\r\n        887590,\r\n        814490,\r\n        786610,\r\n        744660,\r\n        770920,\r\n        930330,\r\n        930190,\r\n        942060,\r\n        933690,\r\n        922280,\r\n        810770,\r\n        809760,\r\n        952010,\r\n        959070,\r\n        957020,\r\n        955890,\r\n        948250,\r\n        825710,\r\n        804970,\r\n        958480,\r\n        959090,\r\n        970200,\r\n        907010,\r\n        950150,\r\n        825240,\r\n        820890,\r\n        971020,\r\n        973560,\r\n        967940,\r\n        960360,\r\n        931820,\r\n        795020,\r\n        753860,\r\n        808740,\r\n        970000,\r\n        981020,\r\n        979810,\r\n        975840,\r\n        829690,\r\n        819300,\r\n        992290,\r\n        998040,\r\n        1006540,\r\n        1013790,\r\n        995130,\r\n        848190,\r\n        851890,\r\n        1024210,\r\n        1032210,\r\n        1032290,\r\n        1027510,\r\n        1010090,\r\n        850110,\r\n        741740,\r\n        844400,\r\n        850410,\r\n        1006690,\r\n        1018470,\r\n        1011630,\r\n        916990,\r\n        861050,\r\n        1039650,\r\n        1032640,\r\n        904200,\r\n        1045560,\r\n        1022330,\r\n        888970,\r\n        896300,\r\n        1073460,\r\n        1074860,\r\n        1074820,\r\n        1074880,\r\n        1057340,\r\n        909410,\r\n        906710,\r\n        1078860,\r\n        1092760,\r\n        1083360,\r\n        1078680,\r\n        1067310,\r\n        903090,\r\n        858360,\r\n        947540,\r\n        1089590,\r\n        1095060,\r\n        1093130,\r\n        1070660,\r\n        915380,\r\n        916530,\r\n        1108410,\r\n        1109460,\r\n        1097230,\r\n        1094520,\r\n        1074630,\r\n        915520,\r\n        915750,\r\n        1101730,\r\n        1104580,\r\n        1107930,\r\n        1116850,\r\n        1106360,\r\n        928500,\r\n        928210,\r\n        1110530,\r\n        1103230,\r\n        1099970,\r\n        1106180,\r\n        1096060,\r\n        982050,\r\n        932620,\r\n        1100880,\r\n        1099970,\r\n        1080040,\r\n        959480,\r\n        951360,\r\n        902160,\r\n        916070,\r\n        1094120,\r\n        1092530,\r\n        1089290,\r\n        1081760,\r\n        1073320,\r\n        937320,\r\n        900010,\r\n        1084910,\r\n        1082620,\r\n        1080960,\r\n        1074050,\r\n        1077810,\r\n        925090,\r\n        913970,\r\n        1082900,\r\n        1089240,\r\n        1088890,\r\n        1088720,\r\n        1084170,\r\n        938750,\r\n        904060,\r\n        1091540,\r\n        1093660,\r\n        1104520,\r\n        1085860,\r\n        1091880,\r\n        939720,\r\n        919790,\r\n        1098590,\r\n        1110310,\r\n        1105580,\r\n        1105220,\r\n        1096580,\r\n        940670,\r\n        923480,\r\n        1102360,\r\n        1102760,\r\n        1102280,\r\n        1108680,\r\n        1109210,\r\n        955490,\r\n        944730,\r\n        1125380,\r\n        1127440,\r\n        1123070,\r\n        1123910,\r\n        1121160,\r\n        966340,\r\n        946940,\r\n        1141980,\r\n        1146790,\r\n        1147420,\r\n        1132920,\r\n        990870,\r\n        946370,\r\n        964610,\r\n        1171550,\r\n        1187000,\r\n        1186370,\r\n        1199100,\r\n        1213000,\r\n        1062280,\r\n        1035740,\r\n        1274070,\r\n        1276740,\r\n        1280670,\r\n        1282770,\r\n        1257200,\r\n        1085370,\r\n        1080510,\r\n        1293120,\r\n        1308880,\r\n        1302170,\r\n        1317570,\r\n        1298110,\r\n        1111780,\r\n        1106410,\r\n        1317620,\r\n        1318010,\r\n        1332680,\r\n        1328530,\r\n        1305330,\r\n        1113540,\r\n        1119830,\r\n        1340410,\r\n        1348770,\r\n        1346910,\r\n        1352950,\r\n        1324040,\r\n        1139450,\r\n        1136680,\r\n        1355970,\r\n        1364950,\r\n        1377510,\r\n        1375770,\r\n        1338490,\r\n        1140310,\r\n        1151830,\r\n        1374520,\r\n        1374330,\r\n        1378990,\r\n        1372390,\r\n        1347390,\r\n        1135560,\r\n        1121640,\r\n        1217410,\r\n        1390340,\r\n        1392710,\r\n        1383070,\r\n        1372400,\r\n        1170430,\r\n        1169550,\r\n        1404540,\r\n        1412720,\r\n        1414110,\r\n        1417200,\r\n        1388240,\r\n        1194260,\r\n        1188850,\r\n        1416140,\r\n        1425890,\r\n        1426380,\r\n        1410520,\r\n        1388600,\r\n        1197940,\r\n        1197680,\r\n        1432620,\r\n        1448350,\r\n        1436320,\r\n        1438890,\r\n        1412650,\r\n        1222040,\r\n        1215220,\r\n        1454190,\r\n        1456740,\r\n        1490670,\r\n        1470910,\r\n        1438940,\r\n        1243620,\r\n        1241210,\r\n        1483460,\r\n        1489950,\r\n        1488440,\r\n        1482490,\r\n        1465050,\r\n        1261450,\r\n        1281800,\r\n        1552680,\r\n        1527050,\r\n        1526500,\r\n        1511360,\r\n        1497560,\r\n        1302860,\r\n        1292930,\r\n        1547830,\r\n        1550610,\r\n        1546490,\r\n        1547790,\r\n        1525750,\r\n        1324580,\r\n        1321580,\r\n        1576620,\r\n        1575060,\r\n        1570240,\r\n        1574670,\r\n        1543830,\r\n        1341780,\r\n        1341710,\r\n        1577840,\r\n        1565630,\r\n        1580460,\r\n        1569570,\r\n        1543390,\r\n        1431880,\r\n        1301600,\r\n        1401500,\r\n        1401040,\r\n        1530910,\r\n        1526670,\r\n        1498750,\r\n        1383070,\r\n        1284000,\r\n        1401510,\r\n        1189880,\r\n        1309810,\r\n        1380230,\r\n        1383630,\r\n        1254140,\r\n        1216830,\r\n        1243860,\r\n        1442240,\r\n        1481680,\r\n        1480680,\r\n        1490700,\r\n        1315410,\r\n        1300930,\r\n        1530520,\r\n        1532340,\r\n        1539150,\r\n        1541510,\r\n        1532770,\r\n        1344910,\r\n        1325530,\r\n        1563330,\r\n        1568490,\r\n        1580110,\r\n        1575130,\r\n        1564880,\r\n        1369810,\r\n        1359060,\r\n        1608230,\r\n        1605640,\r\n        1605970,\r\n        1601640,\r\n        1590810,\r\n        1381740,\r\n        1375190,\r\n        1625850,\r\n        1621800,\r\n        1629910,\r\n        1628510,\r\n        1609760,\r\n        1397880,\r\n        1392180,\r\n        1647700,\r\n        1646770,\r\n        1644200,\r\n        1667150,\r\n        1610910,\r\n        1408450,\r\n        1395010,\r\n        1652870,\r\n        1658870,\r\n        1660310,\r\n        1659060,\r\n        1629490,\r\n        1435450,\r\n        1407720,\r\n        1675610,\r\n        1682450,\r\n        1682070,\r\n        1693010,\r\n        1669030,\r\n        1448500,\r\n        1439490,\r\n        1710110,\r\n        1702690,\r\n        1707000,\r\n        1662770,\r\n        1512800,\r\n        1101660\r\n      ],\r\n      [\r\n        \"y3\",\r\n        409540,\r\n        377260,\r\n        456380,\r\n        460230,\r\n        452020,\r\n        389350,\r\n        397230,\r\n        369000,\r\n        382180,\r\n        473570,\r\n        477470,\r\n        477550,\r\n        478030,\r\n        466150,\r\n        397480,\r\n        406380,\r\n        494570,\r\n        494680,\r\n        482810,\r\n        487700,\r\n        475090,\r\n        400520,\r\n        397940,\r\n        484160,\r\n        487740,\r\n        493260,\r\n        434500,\r\n        475410,\r\n        398650,\r\n        404690,\r\n        491980,\r\n        493410,\r\n        485250,\r\n        484740,\r\n        465490,\r\n        377460,\r\n        353960,\r\n        396390,\r\n        493300,\r\n        497560,\r\n        495110,\r\n        485260,\r\n        394770,\r\n        402910,\r\n        500540,\r\n        506260,\r\n        509680,\r\n        514010,\r\n        494350,\r\n        405360,\r\n        412560,\r\n        513030,\r\n        521320,\r\n        515730,\r\n        518170,\r\n        499850,\r\n        394960,\r\n        328510,\r\n        406450,\r\n        408080,\r\n        501980,\r\n        507800,\r\n        496990,\r\n        442530,\r\n        414260,\r\n        525770,\r\n        513440,\r\n        442660,\r\n        526810,\r\n        500190,\r\n        426220,\r\n        436110,\r\n        546820,\r\n        543480,\r\n        545420,\r\n        540530,\r\n        527770,\r\n        431050,\r\n        443100,\r\n        549550,\r\n        551600,\r\n        548120,\r\n        542290,\r\n        528810,\r\n        435370,\r\n        407250,\r\n        463200,\r\n        553640,\r\n        554110,\r\n        555820,\r\n        536470,\r\n        440460,\r\n        447740,\r\n        563330,\r\n        561850,\r\n        556430,\r\n        550910,\r\n        539440,\r\n        441200,\r\n        442310,\r\n        563100,\r\n        563760,\r\n        559230,\r\n        570870,\r\n        555280,\r\n        447750,\r\n        455570,\r\n        564630,\r\n        562510,\r\n        556050,\r\n        555560,\r\n        556470,\r\n        484080,\r\n        451320,\r\n        561060,\r\n        553630,\r\n        540660,\r\n        473500,\r\n        472500,\r\n        438550,\r\n        447590,\r\n        548670,\r\n        549580,\r\n        539920,\r\n        541510,\r\n        540380,\r\n        450260,\r\n        432260,\r\n        535950,\r\n        545160,\r\n        543810,\r\n        536990,\r\n        539680,\r\n        446570,\r\n        444470,\r\n        543450,\r\n        549070,\r\n        547840,\r\n        541430,\r\n        540200,\r\n        450080,\r\n        431800,\r\n        549290,\r\n        545890,\r\n        556300,\r\n        536500,\r\n        543890,\r\n        450890,\r\n        440180,\r\n        550850,\r\n        554740,\r\n        553460,\r\n        553440,\r\n        546420,\r\n        446710,\r\n        436640,\r\n        553270,\r\n        547750,\r\n        551920,\r\n        547610,\r\n        545500,\r\n        449220,\r\n        447510,\r\n        560050,\r\n        561560,\r\n        561560,\r\n        556630,\r\n        559340,\r\n        461630,\r\n        456300,\r\n        569070,\r\n        574800,\r\n        575220,\r\n        566180,\r\n        472200,\r\n        450530,\r\n        462960,\r\n        590290,\r\n        597250,\r\n        592970,\r\n        604870,\r\n        613050,\r\n        512200,\r\n        495980,\r\n        649860,\r\n        645070,\r\n        636950,\r\n        647120,\r\n        630390,\r\n        518820,\r\n        525990,\r\n        661700,\r\n        659770,\r\n        660650,\r\n        669560,\r\n        644510,\r\n        529610,\r\n        539520,\r\n        673850,\r\n        668530,\r\n        673770,\r\n        669480,\r\n        654540,\r\n        536090,\r\n        548400,\r\n        690100,\r\n        684900,\r\n        687040,\r\n        685940,\r\n        666360,\r\n        560140,\r\n        553050,\r\n        696740,\r\n        694490,\r\n        703000,\r\n        697980,\r\n        674460,\r\n        548230,\r\n        557370,\r\n        697150,\r\n        700110,\r\n        701170,\r\n        695810,\r\n        669780,\r\n        543500,\r\n        540170,\r\n        597430,\r\n        711500,\r\n        699770,\r\n        698520,\r\n        682170,\r\n        568380,\r\n        572950,\r\n        715580,\r\n        716050,\r\n        720770,\r\n        720660,\r\n        695220,\r\n        572970,\r\n        578170,\r\n        722280,\r\n        724280,\r\n        727910,\r\n        719820,\r\n        699840,\r\n        580870,\r\n        586270,\r\n        729850,\r\n        733680,\r\n        726590,\r\n        731270,\r\n        709330,\r\n        593070,\r\n        600500,\r\n        743590,\r\n        743690,\r\n        767660,\r\n        747140,\r\n        730510,\r\n        607540,\r\n        610480,\r\n        762440,\r\n        772960,\r\n        763480,\r\n        758490,\r\n        741090,\r\n        614450,\r\n        645760,\r\n        831130,\r\n        792100,\r\n        780410,\r\n        778620,\r\n        761000,\r\n        643620,\r\n        650320,\r\n        802640,\r\n        805900,\r\n        803960,\r\n        800580,\r\n        783660,\r\n        648310,\r\n        668150,\r\n        825940,\r\n        818650,\r\n        816630,\r\n        821000,\r\n        782790,\r\n        657850,\r\n        671660,\r\n        817660,\r\n        816020,\r\n        821380,\r\n        816280,\r\n        800240,\r\n        712510,\r\n        648060,\r\n        711170,\r\n        709110,\r\n        802240,\r\n        792710,\r\n        772260,\r\n        691490,\r\n        636050,\r\n        649450,\r\n        566120,\r\n        651310,\r\n        701910,\r\n        702270,\r\n        627880,\r\n        605290,\r\n        621710,\r\n        744830,\r\n        762830,\r\n        765640,\r\n        764140,\r\n        648720,\r\n        642430,\r\n        786580,\r\n        778790,\r\n        780060,\r\n        789170,\r\n        772600,\r\n        652160,\r\n        648950,\r\n        795360,\r\n        802250,\r\n        808010,\r\n        801890,\r\n        793490,\r\n        669240,\r\n        665310,\r\n        814370,\r\n        810880,\r\n        814580,\r\n        813950,\r\n        802070,\r\n        670450,\r\n        674250,\r\n        823010,\r\n        820620,\r\n        821400,\r\n        820760,\r\n        804300,\r\n        681870,\r\n        681460,\r\n        831580,\r\n        835600,\r\n        835390,\r\n        840770,\r\n        810700,\r\n        675170,\r\n        680870,\r\n        832000,\r\n        836790,\r\n        845630,\r\n        844560,\r\n        821810,\r\n        690310,\r\n        683810,\r\n        851150,\r\n        848090,\r\n        846480,\r\n        858340,\r\n        831290,\r\n        696470,\r\n        695540,\r\n        866980,\r\n        868190,\r\n        861720,\r\n        834530,\r\n        706650,\r\n        439140\r\n      ]\r\n    ],\r\n    \"types\": {\r\n      \"y0\": \"line\",\r\n      \"y1\": \"line\",\r\n      \"y2\": \"line\",\r\n      \"y3\": \"line\",\r\n      \"x\": \"x\"\r\n    },\r\n    \"names\": { \"y0\": \"#0\", \"y1\": \"#1\", \"y2\": \"#2\", \"y3\": \"#3\" },\r\n    \"colors\": {\r\n      \"y0\": \"#cb513a\",\r\n      \"y1\": \"#73c03a\",\r\n      \"y2\": \"#65b9ac\",\r\n      \"y3\": \"#4682b4\"\r\n    }\r\n  }\r\n]\r\n","Array.prototype.last = function() {  // eslint-disable-line\r\n  if(!this.length) return undefined;\r\n  return this[this.length - 1];\r\n};\r\n","export const formatUnix = timestamp =>\r\n  new Date(timestamp)\r\n    .toString()\r\n    .split(\" \")\r\n    .slice(1, 1 + 2)\r\n    .join(\" \");\r\n\r\nexport const linearBezier = (t, a, b) => a + t * (b - a);\r\n\r\nexport const hexOpacity = (hex, o) =>\r\n  hex +\r\n  Math.floor(o * 255)\r\n    .toString(16)\r\n    .padStart(2, \"0\");\r\n\r\nconst AS = {\r\n  clearAnimation: Symbol(\"clear animation\"),\r\n  animationTimeProgress: Symbol(\"animation time progress\")\r\n};\r\n\r\nexport const createAnimation = (\r\n  state,\r\n  onChangeState = () => {},\r\n  animationTime\r\n) => {\r\n  const { animationTimeProgress, clearAnimation } = AS;\r\n\r\n  state[clearAnimation] = () => {};\r\n\r\n  const initial = {};\r\n\r\n  return newState => {\r\n    state[clearAnimation]();\r\n    let animationStarted = true;\r\n    state[clearAnimation] = () => (animationStarted = false);\r\n\r\n    for (const field in newState) {\r\n      initial[field] = state[field];\r\n    }\r\n\r\n    let start = state[animationTimeProgress];\r\n\r\n    const _animate = timestamp => {\r\n      if (!start) start = timestamp;\r\n\r\n      state[animationTimeProgress] = timestamp;\r\n\r\n      const progress = Math.min(1, (timestamp - start) / animationTime);\r\n\r\n      for (const field in initial)\r\n        state[field] = linearBezier(progress, initial[field], newState[field]);\r\n\r\n      onChangeState();\r\n\r\n      if (progress < 1 && animationStarted) {\r\n        window.requestAnimationFrame(_animate);\r\n      } else {\r\n        state[animationTimeProgress] = null;\r\n      }\r\n    };\r\n    window.requestAnimationFrame(_animate);\r\n  };\r\n};\r\n\r\nexport const copy = obj => {\r\n  if (obj instanceof Date) return new Date(obj);\r\n  if (obj instanceof Array) return obj.map(o => copy(o));\r\n  if (obj instanceof Object) {\r\n    const newObj = {};\r\n    Object.keys(obj).forEach(key => (newObj[key] = copy(obj[key])));\r\n    return newObj;\r\n  }\r\n  return obj;\r\n};\r\n","import { createAnimation, hexOpacity } from \"../../utils\";\r\n\r\nexport class LineChart {\r\n  constructor(config) {\r\n    this.config = config;\r\n\r\n    this.canvas = document.createElement(\"canvas\");\r\n    this.canvas.width = config.width;\r\n    this.canvas.height = config.height;\r\n\r\n    this.ctx = this.canvas.getContext(\"2d\");\r\n\r\n    this.ctx.lineJoin = \"round\";\r\n    this.ctx.lineWidth = config.lineWidth || 1;\r\n\r\n    this.state = {\r\n      minX: config.xAxis[0],\r\n      maxX: config.xAxis.last(),\r\n      minY: 0,\r\n      maxY: 1\r\n    };\r\n\r\n    for (const l in config.columns) {\r\n      this.state[\"opacity_\" + l] = 1;\r\n    }\r\n    this.animate = createAnimation(\r\n      this.state,\r\n      () => {\r\n        this.clear();\r\n        this.draw();\r\n      },\r\n      config.animationSpeed\r\n    );\r\n  }\r\n\r\n  draw() {\r\n    this.drawLines();\r\n  }\r\n\r\n  drawLines() {\r\n    const { config, ctx, state } = this;\r\n    const { xAxis, columns, lineWidth } = config;\r\n    ctx.lineWidth = lineWidth;\r\n    for (const l in columns) {\r\n      ctx.beginPath();\r\n      ctx.strokeStyle = hexOpacity(columns[l].color, state[\"opacity_\" + l]);\r\n\r\n      const yAxis = columns[l].values;\r\n\r\n      for (let i = 0; i < yAxis.length; i++) {\r\n        const x = this.x(this.scaleX(xAxis[i]));\r\n        if(x < 0 || i === 0) {\r\n          ctx.moveTo(this.x(this.scaleX(xAxis[i])), this.y(this.scaleY(yAxis[i])));\r\n        }\r\n        ctx.lineTo(\r\n          x,\r\n          this.y(this.scaleY(yAxis[i]))\r\n          );\r\n        if(x > this.config.width) break;\r\n      }\r\n\r\n      ctx.stroke();\r\n      ctx.closePath();\r\n    }\r\n  }\r\n\r\n  x(x) {\r\n    return x;\r\n  }\r\n\r\n  y(y) {\r\n    return this.config.height - y;\r\n  }\r\n\r\n  scaleX(x) {\r\n    const { config, state } = this;\r\n    const { width } = config;\r\n    const { minX, maxX } = state;\r\n\r\n    const diffX = maxX - minX;\r\n\r\n    const kx = width / diffX;\r\n\r\n    return (x - minX) * kx;\r\n  }\r\n\r\n  scaleY(y) {\r\n    const { config, state } = this;\r\n    const { height } = config;\r\n    const { minY, maxY } = state;\r\n\r\n    const diffY = maxY - minY;\r\n\r\n    const ky = height / diffY;\r\n\r\n    return (y - minY) * ky;\r\n  }\r\n\r\n  clear() {\r\n    this.ctx.clearRect(0, 0, this.config.width, this.config.height);\r\n  }\r\n\r\n  render() {\r\n    this.config.$container.appendChild(this.canvas);\r\n    this.draw();\r\n  }\r\n}\r\n","import \"../../builtins-upgrade\";\r\nimport { formatUnix, hexOpacity } from \"../../utils\";\r\nimport { LineChart } from \"./line-chart\";\r\n\r\nexport class LineChartWithMarks extends LineChart {\r\n  constructor(config) {\r\n    super(config);\r\n    this.ctx.font = `${this.config.fontSize}px sans-serif`;\r\n\r\n    this.absMinX = config.xAxis[0];\r\n    this.absMaxX = config.xAxis.last();\r\n  }\r\n\r\n  draw() {\r\n    this.drawLines();\r\n    this.drawMarksX();\r\n    this.drawMarksY();\r\n  }\r\n\r\n  drawMarksX() {\r\n    const { ctx, config } = this;\r\n    const { fontSize } = config;\r\n\r\n    const { absMinX, absMaxX } = this;\r\n\r\n    const lmx = this.x(this.scaleX(absMinX));\r\n    const rmx = this.x(this.scaleX(absMaxX));\r\n\r\n    const k = (absMaxX - absMinX) / (rmx - lmx);\r\n\r\n    const drawMark = (lx, rx) => {\r\n      const mx = lx + (rx - lx) / 2;\r\n\r\n      let opacity = 1;\r\n\r\n      const d = absMinX + (mx - lmx) * k;\r\n\r\n      const txt = formatUnix(d);\r\n      const textMetrics = ctx.measureText(txt);\r\n      const w = textMetrics.width;\r\n\r\n      if (rx - lx <= 3.5 * w) {\r\n        opacity = (rx - lx - w) / (3.5 * w);\r\n      }\r\n\r\n      if (mx > w / 3 && mx < config.width - w / 3) {\r\n        ctx.fillStyle = hexOpacity(\"#606060\", opacity);\r\n        ctx.fillText(txt, mx - w / 2, this.y(-fontSize * 0.8));\r\n      }\r\n\r\n      if (rx - lx > 4 * w) {\r\n        drawMark(lx, mx);\r\n        drawMark(mx, rx);\r\n      }\r\n    };\r\n\r\n    drawMark(lmx, rmx);\r\n  }\r\n\r\n  drawMarksY() {\r\n    const { ctx, config, state } = this;\r\n    const { absMinY, absMaxY, fontSize, width, height } = config;\r\n    const { minY, maxY } = state;\r\n    if (!(maxY - minY)) return;\r\n    ctx.fillStyle = \"#4a4a4a\";\r\n    ctx.strokeStyle =  \"#000000a1\";\r\n    ctx.lineWidth = 1;\r\n\r\n    const lmy = this.scaleY(absMinY);\r\n    const umy = this.scaleY(absMaxY);\r\n\r\n    const k = (absMaxY - absMinY) / (umy - lmy);\r\n\r\n    const startY =\r\n      ((this.scaleY(minY) - lmy + umy - this.scaleY(maxY)) % fontSize) * 3;\r\n\r\n    ctx.beginPath();\r\n    for (let y = -startY; y < height - fontSize; y += fontSize * 3.2) {\r\n      if (y < 10) continue;\r\n      ctx.moveTo(this.x(0), this.y(y));\r\n      ctx.fillText(Math.floor(minY + y * k), 0, this.y(y) - 5);\r\n      ctx.lineTo(this.x(width), this.y(y));\r\n    }\r\n    ctx.stroke();\r\n    ctx.closePath();\r\n  }\r\n\r\n  y(y) {\r\n    const { height, fontSize } = this.config;\r\n    const h = height - fontSize;\r\n\r\n    return ((height - y) * h) / height;\r\n  }\r\n}\r\n","import \"./styles/slider.css\";\r\n\r\nimport { createAnimation } from \"../utils\";\r\n\r\nexport class Slider {\r\n  constructor(config) {\r\n    this.width = config.width;\r\n    this.height = config.height;\r\n    this.$container = config.$container;\r\n    this.dragWidth = config.dragWidth;\r\n    this.maxGap = (config.maxGap + this.dragWidth * 2) / this.width;\r\n    this.state = {\r\n      left: 0.5 * (1 - 2 * this.maxGap),\r\n      right: 0.5 * (1 + 2 * this.maxGap)\r\n    }\r\n    this.subscribers = [];\r\n    this.mouseDown = false;\r\n\r\n    this.$sliderWrapper = document.createElement(\"div\");\r\n    this.$sliderWrapper.classList.add(\"sliderWrapper\");\r\n\r\n    const $slider = document.createElement(\"div\");\r\n    $slider.classList.add(\"slider\");\r\n\r\n    this.$sliderWrapper.appendChild($slider);\r\n\r\n    this.$sliderWrapper.style.setProperty(\"--width\", this.width);\r\n    this.$sliderWrapper.style.setProperty(\"--height\", this.height);\r\n    this.$sliderWrapper.style.setProperty(\"--drag-width\", this.dragWidth);\r\n\r\n    const $sliderWindow = document.createElement(\"div\");\r\n    $sliderWindow.classList.add(\"sliderWindow\");\r\n\r\n    $slider.appendChild($sliderWindow);\r\n\r\n    const $blurLeft = document.createElement(\"div\");\r\n    const $blurRight = document.createElement(\"div\");\r\n    $blurLeft.classList.add(\"blurLeft\");\r\n    $blurRight.classList.add(\"blurRight\");\r\n\r\n    $sliderWindow.appendChild($blurLeft);\r\n    $sliderWindow.appendChild($blurRight);\r\n\r\n    this.$slider = $slider;\r\n    this.$sliderWindow = $sliderWindow;\r\n\r\n    this.updateSlider = this.updateSlider.bind(this);\r\n  }\r\n\r\n  set onChange(func) {\r\n    this.subscribers.push(func);\r\n  }\r\n\r\n  dragHandler(event) {\r\n    const { state } = this;\r\n    const x =\r\n      (event.clientX - this.$slider.getBoundingClientRect().left) / this.width;\r\n    if (!(this.draggingLeft || this.draggingRight || this.draggingAll)) {\r\n      if (x < state.left + this.dragWidth / this.width) {\r\n        this.draggingLeft = true;\r\n      } else if (x > state.right - this.dragWidth / this.width) {\r\n        this.draggingRight = true;\r\n      } else {\r\n        this.draggingAll = true;\r\n      }\r\n      this.startDrag = [x, state.left, state.right];\r\n    }\r\n\r\n    const change = x - this.startDrag[0];\r\n\r\n    let { left, right } = this.state;\r\n\r\n    !this.draggingRight &&\r\n      (left = Math.max(\r\n        0,\r\n        Math.min(state.right - this.maxGap, this.startDrag[1] + change)\r\n      ));\r\n    !this.draggingLeft &&\r\n      (right = Math.min(\r\n        1,\r\n        Math.max(state.left + this.maxGap, this.startDrag[2] + change)\r\n      ));\r\n    this.publish(left, right);\r\n    this.state = { left, right };\r\n    window.requestAnimationFrame(this.updateSlider);\r\n  }\r\n\r\n  publish(left, right) {\r\n    this.subscribers.forEach(s => s(left, right));\r\n  }\r\n\r\n  setListeners() {\r\n    this.$sliderWindow.addEventListener(\"mousedown\", () => {\r\n      this.mouseDown = true;\r\n    });\r\n    document.addEventListener(\"mouseup\", () => {\r\n      this.mouseDown = false;\r\n      this.draggingLeft = false;\r\n      this.draggingRight = false;\r\n      this.draggingAll = false;\r\n      this.startDrag = null;\r\n    });\r\n    document.addEventListener(\"mousemove\", e => {\r\n      if (this.mouseDown) {\r\n        this.dragHandler(e);\r\n      }\r\n    });\r\n  }\r\n  updateSlider() {\r\n    const { state } = this;\r\n\r\n    this.$slider.style.setProperty(\"--left\", state.left * this.width);\r\n    this.$slider.style.setProperty(\"--right\", (1 - state.right) * this.width);\r\n  }\r\n  render() {\r\n    const { state } = this\r\n    this.$container.appendChild(this.$sliderWrapper);\r\n\r\n    this.updateSlider();\r\n    this.setListeners();\r\n    this.publish(state.left, state.right);\r\n  }\r\n}\r\n","import \"./styles/checkbox.css\";\r\n\r\nexport class Checkbox {\r\n  constructor({ label, checked = false, $container, color }) {\r\n    this.label = label;\r\n    this.subscribers = [];\r\n    this.$container = $container;\r\n\r\n    this.checked = false;\r\n\r\n    this.$checkboxWrapper = document.createElement(\"div\");\r\n    this.$checkboxWrapper.classList.add(\"checkboxWrapper\");\r\n    this.$checkboxWrapper.style.setProperty(\"--color\", color);\r\n\r\n    this.$checkbox = document.createElement(\"span\");\r\n    this.$checkbox.classList.add(\"checkbox\");\r\n    this.$label = document.createElement(\"span\");\r\n    this.$label.classList.add(\"label\");\r\n    this.$label.textContent = label;\r\n\r\n    this.$checkboxWrapper.appendChild(this.$checkbox);\r\n    this.$checkboxWrapper.appendChild(this.$label);\r\n    this.$checkboxWrapper.addEventListener(\"click\", () =>\r\n      this.toggleChecked()\r\n    );\r\n    checked && this.toggleChecked();\r\n  }\r\n\r\n  set onChange(func) {\r\n    this.subscribers.push(func);\r\n  }\r\n\r\n  toggleChecked() {\r\n    this.checked = !this.checked;\r\n\r\n    this.$checkbox.classList.remove(\"boom\");\r\n    void this.$checkbox.offsetWidth\r\n    this.$checkbox.classList.add(\"boom\");\r\n\r\n    this.checked ? this.$checkbox.classList.add(\"checked\") : this.$checkbox.classList.remove(\"checked\");\r\n\r\n    this.subscribers.forEach(s => s(this.checked));\r\n  }\r\n\r\n  render() {\r\n    this.$container.appendChild(this.$checkboxWrapper);\r\n  }\r\n}\r\n","import \"../builtins-upgrade\";\r\n\r\nimport \"./styles/chart-manager.css\";\r\nimport { LineChart } from \"./charts/line-chart\";\r\nimport { LineChartWithMarks } from \"./charts/line-chart-with-marks\";\r\nimport { Slider } from \"./slider\";\r\nimport { Checkbox } from \"./checkbox\";\r\n\r\nexport class ChartManager {\r\n  constructor(config) {\r\n    this.width = config.width;\r\n    this.height = config.height;\r\n    this.overviewHeight = config.overviewHeight;\r\n    this.chart = config.chart;\r\n    this.animationSpeed = config.animationSpeed;\r\n    this.$container = config.$container;\r\n\r\n    this.$chartManager = document.createElement(\"div\");\r\n    this.$chartManager.classList.add(\"chartManager\");\r\n    this.$chartManager.style.setProperty(\"--width\", this.width + \"px\");\r\n\r\n    this.shownCharts = new Set(Object.keys(this.chart.columns));\r\n\r\n    this.$mainChartContainer = document.createElement(\"div\");\r\n\r\n    this.$chartManager.appendChild(this.$mainChartContainer);\r\n\r\n    const { minY: absMinY, maxY: absMaxY } = this.minMaxY(\r\n      0,\r\n      this.chart.xAxis.length - 1\r\n    );\r\n\r\n    this.mainLineChart = new LineChartWithMarks({\r\n      width: this.width,\r\n      height: this.height,\r\n      lineWidth: 2,\r\n      ...this.chart,\r\n      $container: this.$mainChartContainer,\r\n      animationSpeed: this.animationSpeed,\r\n      fontSize: 14,\r\n      absMinY,\r\n      absMaxY\r\n    });\r\n\r\n    this.$sliderContainer = document.createElement(\"div\");\r\n    this.$chartManager.appendChild(this.$sliderContainer);\r\n\r\n    this.slider = new Slider({\r\n      $container: this.$sliderContainer,\r\n      dragWidth: 10,\r\n      height: this.overviewHeight,\r\n      maxGap: 30,\r\n      width: this.width\r\n    });\r\n\r\n    this.slider.onChange = (...r) => this.setRange(...r);\r\n\r\n    this.overviewLineChart = new LineChart({\r\n      width: this.width,\r\n      height: this.overviewHeight,\r\n      lineWidth: 1,\r\n      ...this.chart,\r\n      $container: this.slider.$slider,\r\n      animationSpeed: this.animationSpeed\r\n    });\r\n\r\n    this.overviewLineChart.canvas.style.position = \"absolute\";\r\n\r\n    this.$checkboxContainer = document.createElement(\"div\");\r\n    this.$checkboxContainer.classList.add(\"checkboxContainer\");\r\n\r\n    this.$chartManager.appendChild(this.$checkboxContainer);\r\n\r\n    this.checkboxes = [];\r\n\r\n    Object.keys(this.chart.columns).forEach(l => {\r\n      const checkbox = new Checkbox({\r\n        $container: this.$checkboxContainer,\r\n        label: this.chart.columns[l].name,\r\n        color: this.chart.columns[l].color,\r\n        checked: true\r\n      });\r\n      checkbox.onChange = checked => {\r\n        this.handleCheckbox(l, checked);\r\n      };\r\n      this.checkboxes.push(checkbox);\r\n    });\r\n  }\r\n\r\n  setRange(left, right) {\r\n    this.range = [left, right];\r\n    this.update();\r\n  }\r\n\r\n  update() {\r\n    const [left, right] = this.range;\r\n    const start = Math.floor((this.chart.xAxis.length - 1) * left),\r\n      end = Math.floor((this.chart.xAxis.length - 1) * right);\r\n\r\n    const spreadX = this.chart.xAxis.last() - this.chart.xAxis[0];\r\n    const minX = this.chart.xAxis[0] + left * spreadX,\r\n      maxX = this.chart.xAxis[0] + right * spreadX;\r\n\r\n    const newMainState = {\r\n      minX,\r\n      maxX,\r\n      ...this.minMaxY(start, end)\r\n    };\r\n    const newOverviewState = {\r\n      ...this.minMaxY(0, this.chart.xAxis.length - 1)\r\n    };\r\n\r\n    Object.keys(this.chart.columns).forEach(l => {\r\n      const o = this.shownCharts.has(l) ? 1 : 0;\r\n      newMainState[`opacity_${l}`] = newOverviewState[`opacity_${l}`] = o;\r\n    });\r\n\r\n    this.mainLineChart.animate(newMainState);\r\n    this.overviewLineChart.animate(newOverviewState);\r\n  }\r\n\r\n  minMaxY(start, end) {\r\n    let minY, maxY;\r\n\r\n    for (const label of this.shownCharts) {\r\n      for (let i = start; i <= end; i++) {\r\n        const val = this.chart.columns[label].values[i];\r\n\r\n        if (!minY || minY > val) minY = val;\r\n        if (!maxY || maxY < val) maxY = val;\r\n      }\r\n    }\r\n    return { minY: minY || 0, maxY: maxY || 0 };\r\n  }\r\n\r\n  handleCheckbox(label, checked) {\r\n    checked ? this.shownCharts.add(label) : this.shownCharts.delete(label);\r\n    this.update();\r\n  }\r\n\r\n  render() {\r\n    this.$container.appendChild(this.$chartManager);\r\n    this.mainLineChart.render();\r\n    this.slider.render();\r\n    this.overviewLineChart.render();\r\n    this.checkboxes.forEach(cb => cb.render());\r\n    this.update();\r\n  }\r\n}\r\n","import \"./styles.css\"\r\nimport chartData from \"./chart_data\";\r\nimport { ChartManager } from \"./chart-manager/components/chart-manager\";\r\n\r\nconst $root = document.querySelector(\".root\");\r\n\r\nfor (const chart of chartData) {\r\n  const chartManager = new ChartManager({\r\n    width: 600,\r\n    height: 310,\r\n    overviewHeight: 72,\r\n    chart: parseChart(chart),\r\n    animationSpeed: 170,\r\n    $container: $root\r\n  });\r\n\r\n  chartManager.render();\r\n}\r\n\r\nfunction parseChart(chart) {\r\n  const parsed = {\r\n    columns: {}\r\n  };\r\n\r\n  for (const column of chart.columns) {\r\n    const label = column[0];\r\n    if (chart.types[label] === \"x\") {\r\n      parsed.xAxis = column.slice(1);\r\n    } else {\r\n      const c = (parsed.columns[label] = {});\r\n      c.values = column.slice(1);\r\n      c.color = chart.colors[label];\r\n      c.name = chart.names[label];\r\n      c.type = chart.types[label];\r\n    }\r\n  }\r\n  return parsed;\r\n}\r\n"]}